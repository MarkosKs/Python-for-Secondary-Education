# Να γράψετε πρόγραμμα σε Python το οποίο:
# α) να διαβάζει τους αριθμούς μητρώου και τους βαθμούς 5 μαθητών στο μάθημα της
# ιστορίας και να τους καταχωρίζει σε δύο λίστες ΑΜ και ΒΑ αντίστοιχα
# β) να υπολογίζει και να εμφανίζει το ΜΟ όλων των μαθητών
# γ) να υπολογίζει και να εμφανίζει πόσοι μαθητές είχαν κάτω από το ΜΟ της τάξης
# δ) να υπολογίζει και να εμφανίζει μία λίστα κατά αύξουσα σειρά ως προς το βαθμό, που να
# έχει τον ΑΜ και από δίπλα το βαθμό του κάθε μαθητή. (με τη βοήθεια της bubblesort)
# ε) Θεωρώντας ότι μόνο ένας μαθητής έχει το βαθμό 14 με τη βοήθεια της binarysearch που
# επιστρέφει τη θέση να βρείτε τον ΑΜ του μαθητή με αυτό το βαθμό

AM = []  # Λίστα για τους αριθμούς μητρώου
BA = []  # Λίστα για τους βαθμούς

for i in range(5):
    am = int(input(f"Δώστε τον αριθμό μητρώου του μαθητή {i+1}: "))
    ba = float(input(f"Δώστε τον βαθμό του μαθητή {i+1}: "))
    AM.append(am)
    BA.append(ba)

# β) Υπολογισμός και εμφάνιση του ΜΟ όλων των βαθμών
MO = sum(BA) / len(BA)
print(f"Ο ΜΟ των βαθμών είναι: {MO:.2f}")

# γ) Υπολογισμός και εμφάνιση πόσοι μαθητές είχαν κάτω από το ΜΟ της τάξης
count_below_MO = sum(1 for grade in BA if grade < MO)
print(f"Αριθμός μαθητών με βαθμό κάτω από τον ΜΟ: {count_below_MO}")

# δ) Ταξινόμηση των λιστών με τη μέθοδο Bubble Sort κατά αύξουσα σειρά βαθμού
for i in range(len(BA)):
    for j in range(0, len(BA) - i - 1):
        if BA[j] > BA[j + 1]:
            # Ανταλλαγή των βαθμών
            BA[j], BA[j + 1] = BA[j + 1], BA[j]
            # Ανταλλαγή των αριθμών μητρώου
            AM[j], AM[j + 1] = AM[j + 1], AM[j]

# Εμφάνιση της λίστας με τον αριθμό μητρώου και τον βαθμό του κάθε μαθητή σε αύξουσα σειρά βαθμού
print("Οι μαθητές με τους βαθμούς τους σε αύξουσα σειρά είναι:")
for i in range(5):
    print(f"ΑΜ: {AM[i]}, Βαθμός: {BA[i]:.2f}")

# ε) Εύρεση του ΑΜ του μαθητή με βαθμό 14 χρησιμοποιώντας τη μέθοδο Binary Search
# Αρχικά πρέπει να ταξινομήσουμε τις λίστες (αν δεν είναι ήδη ταξινομημένες)
def binary_search(arr, target):
    left, right = 0, len(arr) - 1
    while left <= right:
        mid = (left + right) // 2
        if arr[mid] == target:
            return mid  # Επιστρέφει τη θέση του μαθητή με το βαθμό 14
        elif arr[mid] < target:
            left = mid + 1
        else:
            right = mid - 1
    return -1  # Δεν βρέθηκε ο βαθμός

# Εφαρμόζουμε τη binary search στη λίστα των βαθμών για το 14
index_14 = binary_search(BA, 14)

if index_14 != -1:
    print(f"Ο αριθμός μητρώου του μαθητή με βαθμό 14 είναι: {AM[index_14]}")
else:
    print("Δεν βρέθηκε μαθητής με βαθμό 14.")